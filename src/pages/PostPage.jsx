import { useState, useEffect } from "react";
import axios from "axios";
import config from "../config";
import { fakePosts } from "./fakePosts"; // Assuming fakePosts is imported from the provided file

export default function PostPage({ token, username, userId }) {
  const [content, setContent] = useState("");
  const [images, setImages] = useState([]);
  const [preview, setPreview] = useState([]);
  const [posts, setPosts] = useState([]);
  const [commentText, setCommentText] = useState({});
  const [copiedPostId, setCopiedPostId] = useState(null);
  const [showAllComments, setShowAllComments] = useState({});
  const [search, setSearch] = useState("");
  const [filterDays, setFilterDays] = useState("all");

  const handleFileChange = (e) => {
    const files = Array.from(e.target.files);
    setImages(files);
    setPreview(files.map((file) => URL.createObjectURL(file)));
  };

  const uploadImages = async () => {
    const uploaded = [];
    for (const file of images) {
      const formData = new FormData();
      formData.append("file", file);
      const res = await axios.post(
        `${config.apiUrl}/api/Upload/image`,
        formData,
        {
          headers: {
            "Content-Type": "multipart/form-data",
            Authorization: `Bearer ${token}`,
          },
        }
      );
      uploaded.push(res.data.imageUrl);
    }
    return uploaded;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!content.trim()) return alert("Vui l√≤ng nh·∫≠p n·ªôi dung!");
    const imageUrls = await uploadImages();

    await axios.post(
      `${config.apiUrl}/api/Posts`,
      { content, imageUrls, userId },
      { headers: { Authorization: `Bearer ${token}` } }
    );

    setContent("");
    setImages([]);
    setPreview([]);
    document.getElementById("imageInput").value = null;
    loadPosts();
  };

  const handleLike = async (postId) => {
    await axios.post(
      `${config.apiUrl}/api/Posts/${postId}/like?userId=${userId}`,
      {},
      { headers: { Authorization: `Bearer ${token}` } }
    );
    loadPosts();
  };

  const handleComment = async (postId) => {
    const content = commentText[postId];
    if (!content?.trim()) return;
    await axios.post(
      `${config.apiUrl}/api/Posts/${postId}/comment`,
      { content, userId },
      { headers: { Authorization: `Bearer ${token}` } }
    );
    setCommentText((prev) => ({ ...prev, [postId]: "" }));
    loadPosts();
  };

  const handleShare = async (postId) => {
    const url = `${window.location.origin}/posts/${postId}`;
    await navigator.clipboard.writeText(url);
    setCopiedPostId(postId);
    setTimeout(() => setCopiedPostId(null), 2000);
  };

  const loadPosts = async () => {
    try {
      const res = await axios.get(
        `${config.apiUrl}/api/Posts?userId=${userId}`,
        { headers: { Authorization: `Bearer ${token}` } }
      );
      const apiPosts = Array.isArray(res.data) ? res.data : [];
      // Combine fakePosts with API posts
      setPosts([...fakePosts, ...apiPosts]);
    } catch {
      // If API fails, use only fakePosts
      setPosts(fakePosts);
    }
  };

  const filteredPosts = posts.filter((post) => {
    const matchSearch =
      post.content.toLowerCase().includes(search.toLowerCase()) ||
      post.userName.toLowerCase().includes(search.toLowerCase());

    let matchDate = true;
    if (filterDays !== "all") {
      const postDate = new Date(post.createdAt);
      const now = new Date();
      const daysAgo = new Date();
      daysAgo.setDate(now.getDate() - parseInt(filterDays));
      matchDate = postDate >= daysAgo;
    }

    return matchSearch && matchDate;
  });

  useEffect(() => {
    loadPosts();
  }, []);

  return (
    <div className="min-h-screen bg-white">
      <div className="max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <div className="bg-white rounded-lg shadow-md mb-6">
          <div className="p-4 border-b border-gray-200">
            <h2 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
              <span className="text-green-600">üìù</span> T·∫°o b√†i vi·∫øt
            </h2>
          </div>
          <form onSubmit={handleSubmit} className="p-4 space-y-4">
            <textarea
              value={content}
              onChange={(e) => setContent(e.target.value)}
              rows={4}
              className="w-full p-3 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-green-500 text-gray-800 placeholder-gray-400"
              placeholder="B·∫°n ƒëang nghƒ© g√¨?"
            />
            <div className="flex items-center gap-4">
              <label className="flex items-center gap-2 cursor-pointer bg-gray-100 px-3 py-2 rounded-lg hover:bg-gray-200 transition">
                <span className="text-green-600">üì∑</span>
                <span className="text-sm text-gray-600">·∫¢nh</span>
                <input
                  id="imageInput"
                  type="file"
                  multiple
                  accept="image/*"
                  onChange={handleFileChange}
                  className="hidden"
                />
              </label>
            </div>
            {preview.length > 0 && (
              <div className="grid grid-cols-3 gap-2">
                {preview.map((src, i) => (
                  <img
                    key={i}
                    src={src}
                    className="w-full h-24 object-cover rounded-lg border border-gray-200"
                    alt="Preview"
                  />
                ))}
              </div>
            )}
            <button
              type="submit"
              className="w-full bg-green-600 text-white py-2 rounded-lg font-medium hover:bg-green-700 transition disabled:bg-gray-400"
              disabled={!content.trim() && !images.length}
            >
              ƒêƒÉng b√†i
            </button>
          </form>
        </div>

        <div className="mb-6 flex flex-col sm:flex-row items-center gap-4">
          <input
            type="text"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            placeholder="T√¨m b√†i vi·∫øt ho·∫∑c ng∆∞·ªùi ƒëƒÉng..."
            className="flex-1 border border-gray-300 px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
          />
          <select
            value={filterDays}
            onChange={(e) => setFilterDays(e.target.value)}
            className="border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
          >
            <option value="all">T·∫•t c·∫£ ng√†y</option>
            <option value="1">H√¥m nay</option>
            <option value="7">7 ng√†y g·∫ßn ƒë√¢y</option>
            <option value="30">30 ng√†y g·∫ßn ƒë√¢y</option>
          </select>
        </div>

        <div className="space-y-6">
          {filteredPosts.map((post) => (
            <div
              key={post.id}
              className="bg-white rounded-lg shadow-md overflow-hidden"
            >
              <div className="p-4">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center text-green-600 font-semibold">
                    {post.userName?.[0]?.toUpperCase() || "U"}
                  </div>
                  <div>
                    <div className="font-semibold text-gray-800">
                      {post.userName}
                    </div>
                    <div className="text-xs text-gray-500">
                      {new Date(post.createdAt).toLocaleString("vi-VN")}
                    </div>
                  </div>
                </div>
                <div className="mt-3 text-gray-800 whitespace-pre-line">
                  {post.content}
                </div>
                {post.imageUrls?.length > 0 && (
                  <div className="mt-3 flex justify-center">
                    {post.imageUrls.map((url, i) => (
                      <img
                        key={i}
                        src={url}
                        className="max-w-full h-96 object-contain rounded-lg"
                        alt="Post"
                      />
                    ))}
                  </div>
                )}
              </div>
              <div className="px-4 py-2 border-t border-gray-200 flex justify-between text-sm text-gray-600">
                <span>‚ù§Ô∏è {post.likeCount || 0} l∆∞·ª£t th√≠ch</span>
                <span>{post.comments?.length || 0} b√¨nh lu·∫≠n</span>
              </div>
              <div className="border-t border-gray-200 flex divide-x divide-gray-200">
                <button
                  onClick={() => handleLike(post.id)}
                  className={`flex-1 py-2 hover:bg-gray-100 transition flex items-center justify-center gap-2 text-sm font-medium ${
                    post.isLiked ? "text-red-600" : "text-gray-600"
                  }`}
                >
                  <span>{post.isLiked ? "‚ù§Ô∏è" : "ü§ç"}</span> Th√≠ch
                </button>
                <button
                  onClick={() => handleShare(post.id)}
                  className="flex-1 py-2 text-gray-600 hover:bg-gray-100 transition flex items-center justify-center gap-2 text-sm font-medium"
                >
                  <span className="text-blue-600">üîó</span> Chia s·∫ª
                </button>
              </div>
              {copiedPostId === post.id && (
                <div className="px-4 py-1 text-xs text-gray-500 bg-gray-50">
                  ƒê√£ sao ch√©p li√™n k·∫øt!
                </div>
              )}
              <div className="p-4 border-t border-gray-200">
                {(showAllComments[post.id]
                  ? post.comments
                  : post.comments?.slice(0, 3)
                )?.map((c, i) => (
                  <div key={i} className="mb-2 text-sm">
                    <span className="font-medium text-gray-800">
                      {c.userName}:
                    </span>{" "}
                    <span className="text-gray-700">{c.content}</span>
                  </div>
                ))}
                {post.comments?.length > 3 && (
                  <button
                    className="text-blue-600 text-sm hover:underline"
                    onClick={() =>
                      setShowAllComments((prev) => ({
                        ...prev,
                        [post.id]: !prev[post.id],
                      }))
                    }
                  >
                    {showAllComments[post.id]
                      ? "·∫®n b·ªõt b√¨nh lu·∫≠n"
                      : "Xem th√™m b√¨nh lu·∫≠n"}
                  </button>
                )}
                <div className="mt-3 flex gap-2">
                  <input
                    type="text"
                    value={commentText[post.id] || ""}
                    onChange={(e) =>
                      setCommentText((prev) => ({
                        ...prev,
                        [post.id]: e.target.value,
                      }))
                    }
                    ÏáºÌïëÎ™∞="Vi·∫øt b√¨nh lu·∫≠n..."
                    className="flex-1 border border-gray-300 px-3 py-2 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-green-500"
                  />
                  <button
                    onClick={() => handleComment(post.id)}
                    className="bg-green-600 text-white px-4 py-2 rounded-full text-sm font-medium hover:bg-green-700 transition"
                  >
                    G·ª≠i
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}
const fakePosts = [
  {
    id: 1,
    userName: "Nguy·ªÖn VƒÉn An",
    content: "H√¥m nay m√¨nh th·ª≠ m√≥n ph·ªü b√≤ t·∫°i Ph·ªü Th√¨n, r·∫•t ngon v√† ƒë·∫≠m ƒë√†!",
    imageUrls: ["https://images.unsplash.com/photo-1512058564366-4c4e4e1c6143"],
    likeCount: 12,
    comments: [
      {
        userName: "Tr·∫ßn Th·ªã Mai",
        content: "M√¨nh c≈©ng th√≠ch ph·ªü b√≤ t·∫°i Ph·ªü Th√¨n!",
      },
      { userName: "L√™ VƒÉn H√πng", content: "Ph·ªü ·ªü ƒë√¢y ƒë√∫ng l√† tuy·ªát v·ªùi!" },
    ],
    isLiked: false,
    createdAt: "2025-07-16T10:00:00Z",
  },
  {
    id: 2,
    userName: "Ph·∫°m Th·ªã Ng·ªçc",
    content:
      "M·ªõi th·ª≠ m√≥n sushi ·ªü Sushi Kei. M√≥n ƒÉn t∆∞∆°i ngon nh∆∞ng gi√° h∆°i cao.",
    imageUrls: ["https://images.unsplash.com/photo-1579584425555-35d27bf4a8d3"],
    likeCount: 45,
    comments: [
      {
        userName: "V≈© Quang Minh",
        content: "Sushi ·ªü Sushi Kei c√≥ ngon kh√¥ng b·∫°n?",
      },
      {
        userName: "Nguy·ªÖn Th·ªã H∆∞∆°ng",
        content: "M√¨nh c≈©ng th√≠ch sushi ·ªü ƒë√≥, nh∆∞ng ƒë√∫ng l√† gi√° h∆°i cao.",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-15T08:30:00Z",
  },
  {
    id: 3,
    userName: "ƒê·ªó Minh Tu·∫•n",
    content:
      "H√¥m nay m√¨nh th·ª≠ m√≥n b√°nh x√®o t·∫°i B√°nh X√®o 46A, kh√¥ng ƒë∆∞·ª£c nh∆∞ mong ƒë·ª£i, h∆°i kh√¥ v√† nh·∫°t.",
    imageUrls: ["https://images.unsplash.com/photo-1629644295879-4b6e5e2489a7"],
    likeCount: 8,
    comments: [
      {
        userName: "L√™ Th·ªã H·ªìng",
        content:
          "B√°nh x√®o ·ªü ƒë√≥ kh√¥ng ngon h·∫£ b·∫°n? M√¨nh nghe m·ªçi ng∆∞·ªùi khen nhi·ªÅu m√†.",
      },
    ],
    isLiked: false,
    createdAt: "2025-07-14T09:00:00Z",
  },
  {
    id: 4,
    userName: "Tr·∫ßn VƒÉn Ho√†ng",
    content: "Ng√†y mai m√¨nh s·∫Ω b·∫Øt ƒë·∫ßu th·ª≠ th√°ch m·ªõi. C·∫£m th·∫•y h√†o h·ª©ng!",
    imageUrls: [],
    likeCount: 38,
    comments: [
      { userName: "Nguy·ªÖn Th·ªã Linh", content: "Ch√∫c b·∫°n th√†nh c√¥ng nh√©!" },
      {
        userName: "L√™ VƒÉn Nam",
        content: "M√¨nh c≈©ng mu·ªën tham gia th·ª≠ th√°ch n√†y!",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-13T11:00:00Z",
  },
  {
    id: 5,
    userName: "Ho√†ng Minh ƒê·ª©c",
    content: "M√¨nh ƒëang h·ªçc m·ªôt kh√≥a h·ªçc m·ªõi t·∫°i FUNiX, r·∫•t th√∫ v·ªã!",
    imageUrls: ["https://images.unsplash.com/photo-1516321318423-f06f85e504b3"],
    likeCount: 56,
    comments: [
      { userName: "Tr∆∞∆°ng Th·ªã H√†", content: "Ch√∫c m·ª´ng b·∫°n, h·ªçc t·ªët nh√©!" },
      {
        userName: "Ph·∫°m VƒÉn Long",
        content: "Kh√≥a h·ªçc n√†o v·∫≠y? M√¨nh c≈©ng mu·ªën ƒëƒÉng k√Ω!",
      },
    ],
    isLiked: false,
    createdAt: "2025-07-12T12:30:00Z",
  },
  {
    id: 6,
    userName: "L√™ Quang Vinh",
    content: "Cu·ªëi tu·∫ßn n√†y m√¨nh s·∫Ω ƒëi du l·ªãch ƒê√† L·∫°t! ƒêang r·∫•t h√°o h·ª©c.",
    imageUrls: ["https://images.unsplash.com/photo-1507525428034-b723cf961d3e"],
    likeCount: 67,
    comments: [
      {
        userName: "Nguy·ªÖn Th·ªã Th·∫£o",
        content: "Wow, ch√∫c b·∫°n c√≥ chuy·∫øn ƒëi vui v·∫ª!",
      },
      {
        userName: "Tr·∫ßn Th·ªã Y·∫øn",
        content: "ƒê√† L·∫°t ƒë·∫πp l·∫Øm, m√¨nh c≈©ng mu·ªën ƒëi!",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-11T14:00:00Z",
  },
  {
    id: 7,
    userName: "V≈© Quang Huy",
    content:
      "M√¨nh v·ª´a ho√†n th√†nh m·ªôt d·ª± √°n l·ªõn t·∫°i FPT, r·∫•t t·ª± h√†o v·ªõi b·∫£n th√¢n!",
    imageUrls: ["https://images.unsplash.com/photo-1516321497487-e288fb19713f"],
    likeCount: 81,
    comments: [
      {
        userName: "Nguy·ªÖn Th·ªã Qu·ª≥nh",
        content: "Ch√∫c m·ª´ng b·∫°n! Th√†nh c√¥ng ti·∫øp theo nh√©!",
      },
      {
        userName: "Tr∆∞∆°ng Th·ªã H∆∞∆°ng",
        content:
          "B·∫£n th√¢n m√¨nh c≈©ng c·∫£m th·∫•y r·∫•t vui khi ho√†n th√†nh m·ªôt d·ª± √°n!",
      },
    ],
    isLiked: false,
    createdAt: "2025-07-10T15:30:00Z",
  },
  {
    id: 8,
    userName: "Nguy·ªÖn Th·ªã Thu",
    content:
      "S·∫Øp t·ªõi t√¥i s·∫Ω t·ªï ch·ª©c m·ªôt bu·ªïi h√≤a nh·∫°c t·∫°i Nh√† VƒÉn H√≥a Thanh Ni√™n. R·∫•t mong nh·∫≠n ƒë∆∞·ª£c s·ª± ·ªßng h·ªô!",
    imageUrls: ["https://images.unsplash.com/photo-1514525253161-7a46d19cd819"],
    likeCount: 29,
    comments: [
      {
        userName: "L√™ Minh Nh·∫≠t",
        content: "Tuy·ªát v·ªùi, t√¥i r·∫•t mu·ªën tham gia!",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-09T16:00:00Z",
  },
  {
    id: 9,
    userName: "Tr·∫ßn Th·ªã Lan",
    content: "B·∫Øt ƒë·∫ßu ƒë·ªçc cu·ªën 'ƒê·∫Øc Nh√¢n T√¢m', th·∫≠t s·ª± r·∫•t th√∫ v·ªã!",
    imageUrls: [],
    likeCount: 21,
    comments: [
      {
        userName: "L√™ Th·ªã Minh",
        content: "Cu·ªën s√°ch n√†y m√¨nh c≈©ng ƒëang ƒë·ªçc!",
      },
      { userName: "Nguy·ªÖn Thanh T√πng", content: "M√¨nh c≈©ng y√™u s√°ch!" },
    ],
    isLiked: false,
    createdAt: "2025-07-08T17:30:00Z",
  },
  {
    id: 10,
    userName: "Ph·∫°m Th·ªã H·ªìng",
    content: "ƒê√£ th·ª≠ m√≥n b√∫n ri√™u t·∫°i B√∫n Ri√™u Cua 6A, r·∫•t ngon!",
    imageUrls: ["https://images.unsplash.com/photo-1598516802417-8d17f2d3b648"],
    likeCount: 63,
    comments: [
      {
        userName: "Tr·∫ßn Minh Khang",
        content: "M√≥n n√†y tr√¥ng r·∫•t h·∫•p d·∫´n! Qu√°n ·ªü ƒë√¢u v·∫≠y?",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-07T18:30:00Z",
  },
  {
    id: 11,
    userName: "Nguy·ªÖn Quang Anh",
    content:
      "S·∫Øp t·ªõi m√¨nh s·∫Ω ƒëi ph·ªèng v·∫•n t·∫°i VinAI. Hy v·ªçng m·ªçi th·ª© s·∫Ω su√¥n s·∫ª!",
    imageUrls: [],
    likeCount: 34,
    comments: [
      { userName: "L√™ Th·ªã Hoa", content: "Ch√∫c b·∫°n may m·∫Øn!" },
      {
        userName: "Nguy·ªÖn Thanh B√¨nh",
        content: "Hy v·ªçng b·∫°n s·∫Ω c√≥ c√¥ng vi·ªác nh∆∞ √Ω!",
      },
    ],
    isLiked: false,
    createdAt: "2025-07-06T19:00:00Z",
  },
  {
    id: 12,
    userName: "B√πi Th·ªã Ng·ªçc",
    content: "M√¨nh v·ª´a tham gia m·ªôt s·ª± ki·ªán t·∫°i GEM Center! Th·∫≠t tuy·ªát v·ªùi.",
    imageUrls: ["https://images.unsplash.com/photo-1517457373958-b4bdd8b50e05"],
    likeCount: 27,
    comments: [
      { userName: "Nguy·ªÖn Minh Th∆∞", content: "S·ª± ki·ªán g√¨ v·∫≠y?" },
      {
        userName: "Tr∆∞∆°ng B√≠ch Ph∆∞·ª£ng",
        content: "Mong mu·ªën ƒë∆∞·ª£c tham gia l·∫ßn sau!",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-05T20:30:00Z",
  },
  {
    id: 13,
    userName: "Ph·∫°m Minh ƒê·ª©c",
    content: "M·ªôt ng√†y ƒë·∫πp tr·ªùi ƒë·ªÉ ƒëi d·∫°o t·∫°i C√¥ng vi√™n 30/4!",
    imageUrls: ["https://images.unsplash.com/photo-1449824913935-59a10b8d2000"],
    likeCount: 16,
    comments: [
      { userName: "Tr·∫ßn Qu·ª≥nh Anh", content: "C·∫£m gi√°c tuy·ªát v·ªùi!" },
      { userName: "L√™ Thanh Phong", content: "Ng√†y h√¥m nay th·∫≠t tuy·ªát v·ªùi!" },
    ],
    isLiked: false,
    createdAt: "2025-07-04T21:00:00Z",
  },
  {
    id: 14,
    userName: "ƒêo√†n Th·ªã H∆∞∆°ng",
    content: "M√¨nh ƒëang th·ª≠ m·ªôt th√≥i quen m·ªõi, hy v·ªçng s·∫Ω th√†nh c√¥ng.",
    imageUrls: [],
    likeCount: 50,
    comments: [
      {
        userName: "Nguy·ªÖn Minh Khang",
        content: "M√¨nh c≈©ng th·ª≠ th√≥i quen n√†y!",
      },
    ],
    isLiked: true,
    createdAt: "2025-07-03T22:00:00Z",
  },
  {
    id: 15,
    userName: "L√™ Th·ªã Th·∫£o",
    content: "M√¨nh v·ª´a k·∫øt th√∫c m·ªôt bu·ªïi h·ªçc online t·∫°i Kyna, r·∫•t b·ªï √≠ch!",
    imageUrls: ["https://images.unsplash.com/photo-1527689368864-3a2c27e71999"],
    likeCount: 12,
    comments: [
      { userName: "Ph·∫°m Minh Kh√¥i", content: "M√¨nh c≈©ng ƒëang h·ªçc kh√≥a n√†y!" },
    ],
    isLiked: false,
    createdAt: "2025-07-02T23:00:00Z",
  },
  {
    id: 16,
    userName: "Nguy·ªÖn B·∫£o Tr√¢n",
    content: "C·∫£m ∆°n t·∫•t c·∫£ c√°c b·∫°n ƒë√£ lu√¥n ·ªßng h·ªô m√¨nh!",
    imageUrls: [],
    likeCount: 72,
    comments: [
      { userName: "L√™ Thanh Mai", content: "M√¨nh s·∫Ω lu√¥n ·ªßng h·ªô b·∫°n!" },
      { userName: "Nguy·ªÖn B√≠ch H·∫°nh", content: "Ch√∫c b·∫°n lu√¥n th√†nh c√¥ng!" },
    ],
    isLiked: true,
    createdAt: "2025-07-01T10:15:00Z",
  },
  {
    id: 17,
    userName: "L√¢m Thanh T√πng",
    content:
      "Cu·ªëi tu·∫ßn n√†y s·∫Ω l√† d·ªãp ƒë·ªÉ g·∫∑p g·ª° b·∫°n b√® t·∫°i Qu√°n c√† ph√™ Nh√† S√†n.",
    imageUrls: ["https://images.unsplash.com/photo-1495470946180-0b3c805bf430"],
    likeCount: 85,
    comments: [
      {
        userName: "L√™ Quang Duy",
        content: "Hy v·ªçng b·∫°n c√≥ m·ªôt bu·ªïi g·∫∑p m·∫∑t tuy·ªát v·ªùi!",
      },
      {
        userName: "Tr·∫ßn Minh Tu·∫•n",
        content: "M√¨nh c≈©ng s·∫Ω g·∫∑p b·∫°n b√® t·∫°i ƒë√≥ v√†o cu·ªëi tu·∫ßn n√†y!",
      },
    ],
    isLiked: false,
    createdAt: "2025-06-30T11:20:00Z",
  },
  {
    id: 18,
    userName: "Ph·∫°m Minh Ch√¢u",
    content: "ƒê·ªçc cu·ªën 'Nh√† Gi·∫£ Kim', c·∫£m th·∫•y r·∫•t h·ªØu √≠ch!",
    imageUrls: [],
    likeCount: 43,
    comments: [
      {
        userName: "Nguy·ªÖn Quang Vinh",
        content: "Cu·ªën s√°ch n√†y m√¨nh c≈©ng ƒëang ƒë·ªçc!",
      },
    ],
    isLiked: true,
    createdAt: "2025-06-29T12:50:00Z",
  },
  {
    id: 19,
    userName: "Nguy·ªÖn Th√†nh ƒê·∫°t",
    content: "C√πng nhau l√†m vi·ªác v√† h·ªçc h·ªèi, ƒë√≥ l√† ch√¨a kh√≥a th√†nh c√¥ng.",
    imageUrls: ["https://images.unsplash.com/photo-1516321497487-e288fb19713f"],
    likeCount: 32,
    comments: [
      { userName: "Nguy·ªÖn Thi·ªán H√πng", content: "M√¨nh ho√†n to√†n ƒë·ªìng √Ω!" },
    ],
    isLiked: false,
    createdAt: "2025-06-28T13:40:00Z",
  },
  {
    id: 20,
    userName: "L√™ Minh Th∆∞",
    content: "M√¨nh ƒëang chu·∫©n b·ªã cho k·ª≥ thi IELTS, mong m·ªçi chuy·ªán su√¥n s·∫ª!",
    imageUrls: [],
    likeCount: 64,
    comments: [
      { userName: "Phan Th·ªã Lan", content: "Ch√∫c b·∫°n thi t·ªët nh√©!" },
      { userName: "L√™ Minh T√∫", content: "Hy v·ªçng b·∫°n s·∫Ω ƒë·∫°t ƒëi·ªÉm cao!" },
    ],
    isLiked: true,
    createdAt: "2025-06-27T14:00:00Z",
  },
  {
    id: 21,
    userName: "Ho√†ng Th·ªã Mai",
    content:
      "M·ªõi th·ª≠ m√≥n c∆°m t·∫•m t·∫°i C∆°m T·∫•m Ba Ghi·ªÅn, r·∫•t ngon v√† h·ª£p kh·∫©u v·ªã!",
    imageUrls: ["https://images.unsplash.com/photo-1598516802417-8d17f2d3b648"],
    likeCount: 55,
    comments: [
      { userName: "V≈© Th·ªã Qu·ª≥nh", content: "M√≥n n√†y c√≥ gi√° h·ª£p l√Ω kh√¥ng?" },
      {
        userName: "Nguy·ªÖn Thanh Hoa",
        content: "M√¨nh r·∫•t th√≠ch c∆°m t·∫•m t·∫°i ƒë√≥!",
      },
    ],
    isLiked: true,
    createdAt: "2025-06-26T15:00:00Z",
  },
  {
    id: 22,
    userName: "Nguy·ªÖn Lan Anh",
    content: "B√°nh m√¨ k·∫πp th·ªãt t·∫°i B√°nh M√¨ B√† D∆∞ ngon xu·∫•t s·∫Øc! ƒê√°ng th·ª≠!",
    imageUrls: ["https://images.unsplash.com/photo-1555988639-34c765b717e0"],
    likeCount: 40,
    comments: [
      { userName: "L√™ Ph∆∞∆°ng Anh", content: "B√°nh m√¨ ·ªü ƒë√≥ th·∫≠t tuy·ªát v·ªùi!" },
    ],
    isLiked: false,
    createdAt: "2025-06-24T13:20:00Z",
  },
  {
    id: 23,
    userName: "Tr·∫ßn Th·ªã Ng·ªçc",
    content:
      "Th·ª≠ m√≥n b√∫n b√≤ Hu·∫ø ·ªü B√∫n B√≤ Hu·∫ø C√¥ H√†, h∆∞∆°ng v·ªã r·∫•t ƒë·∫∑c tr∆∞ng, s·∫Ω quay l·∫°i!",
    imageUrls: ["https://images.unsplash.com/photo-1598516802417-8d17f2d3b648"],
    likeCount: 36,
    comments: [
      {
        userName: "L√¢m Minh Quang",
        content: "C·∫£m nh·∫≠n c·ªßa b·∫°n v·ªÅ n∆∞·ªõc d√πng th·∫ø n√†o?",
      },
      { userName: "Nguy·ªÖn Th·ªã H∆∞∆°ng", content: "M√≥n n√†y ƒÉn c·ª±c k·ª≥ ngon lu√¥n!" },
    ],
    isLiked: true,
    createdAt: "2025-06-24T13:20:00Z",
  },
  {
    id: 24,
    userName: "Mai Th·ªã H·ªìng",
    content:
      "M√≥n h·ªß ti·∫øu t·∫°i H·ªß Ti·∫øu Nam Vang Nh√¢n Qu√°n l√† m·ªôt s·ª± k·∫øt h·ª£p ho√†n h·∫£o!",
    imageUrls: ["https://images.unsplash.com/photo-1598516802417-8d17f2d3b648"],
    likeCount: 61,
    comments: [
      { userName: "Nguy·ªÖn Thanh B√¨nh", content: "Qu√°n n√†y ·ªü ƒë√¢u v·∫≠y b·∫°n?" },
    ],
    isLiked: false,
    createdAt: "2025-06-23T12:00:00Z",
  },
  {
    id: 25,
    userName: "L√™ Th·ªã Hoa",
    content: "M√≥n ch√® t·∫°i Ch√® K·ª≥ ƒê·ªìng th·∫≠t s·ª± r·∫•t ngon, m√πi v·ªã th∆°m b√©o!",
    imageUrls: ["https://images.unsplash.com/photo-1629644295879-4b6e5e2489a7"],
    likeCount: 50,
    comments: [
      { userName: "Nguy·ªÖn Minh Th∆∞", content: "Ch√® n√†y c√≥ g√¨ ƒë·∫∑c bi·ªát v·∫≠y?" },
    ],
    isLiked: true,
    createdAt: "2025-06-22T11:00:00Z",
  },
];
